---
verbosity: "info"
address: 0.0.0.0:2053
script:
  init: |
    let geoip = new_builtin_geoip().seal();
  route: |
    // A few constants are predefined:
    // - query: the incoming query received
    // - ctx: the query context, e.g. client IP
    // - upstreams: the upstreams API

    if query.first_question.qtype == "AAAA" {
      return create_blackhole(query);
    }

    let resp = upstreams.send("domestic", query);

    try {
      let ans = resp.answer[0];
      return switch ans.rtype.to_string() {
        "A" if !geoip.contains(ans.to_a().ip, "CN") => { upstreams.send("secure", query) }
        "AAAA" if !geoip.contains(ans.to_aaaa().ip, "CN") => { upstreams.send("secure", query) }
        _ => resp
      };
    } catch(err) {
      print(err);
      return resp;
    }

upstreams:
  114DNS:
    udp:
      addr: 114.114.114.114:53

  Ali:
    udp:
      addr: 223.6.6.6:53

  domestic:
    hybrid:
      - 114DNS
      - Ali

  cloudflare:
    https:
      uri: https://cloudflare-dns.com/dns-query
      ratelimit: 3000
      addr: 1.0.0.1

  quad9:
    https:
      uri: https://quad9.net/dns-query
      ratelimit: 3000
      addr: 9.9.9.9

  secure:
    hybrid:
      - cloudflare
      - quad9
